function [force_length_regression] = get_muscle_force_length_regression()
%%% TASK 2

% Input Parameters
% data(:,1): samples of an independent variable
% data(:,2): corresponding samples of a dependent variable

% Output
% force_length_regression: the genered Gaussian model

%     WRITE CODE HERE
%      1) Use WebPlotDigitizer to extract force-length points
%     from Winters et al. (2011) Figure 3C, which is on Learn. Click
%     "View Data", select all, cut, and paste below. 
%     2) Normalize the data so optimal length = 1 and peak = 1. 
%     3) Return a Regression object that  uses Gaussian basis functions.

% Define data points

data = [37.37463127	9.894736842;
        39.36578171	3.719298246;
        38.40707965	14.66666667;
        41.79941003	2.035087719;
        41.09882006	17.75438596;
        41.43067847	14.66666667;
        41.43067847	15.78947368;
        40.39823009	17.75438596;
        40.39823009	21.68421053;
        39.21828909	24.49122807;
        42.90560472	23.92982456;
        43.42182891	23.64912281;
        43.86430678	22.24561404;
        41.43067847	27.01754386;
        41.35693215	31.78947368;
        42.09439528	32.07017544;
        40.39823009	36.84210526;
        43.42182891	35.15789474;
        43.42182891	34.87719298;
        42.53687316	42.1754386;
        45.41297935	53.68421053;
        45.19174041	53.96491228;
        45.56047198	46.66666667;
        45.56047198	46.10526316;
        46.66666667	44.70175439;
        45.56047198	43.57894737;
        44.38053097	45.54385965;
        43.42182891	45.26315789;
        42.83185841	46.38596491;
        42.83185841	48.35087719;
        43.12684366	50.31578947;
        43.42182891	53.96491228;
        43.71681416	57.05263158;
        44.38053097	60.70175439;
        46.44542773	62.66666667;
        47.40412979	62.94736842;
        48.95280236	62.94736842;
        47.69911504	66.87719298;
        45.7079646	67.71929825;
        45.92920354	70.80701754;
        46.44542773	71.64912281;
        47.40412979	71.64912281;
        46.44542773	73.61403509;
        46.66666667	75.57894737;
        49.46902655	76.14035088;
        50.57522124	74.45614035;
        50.79646018	78.10526316;
        50.72271386	78.10526316;
        51.16519174	78.38596491;
        50.9439528	80.07017544;
        49.7640118	81.75438596;
        48.95280236	82.03508772;
        48.95280236	81.19298246;
        47.10914454	80.63157895;
        47.62536873	81.75438596;
        47.40412979	81.47368421;
        48.21533923	83.15789474;
        48.87905605	85.12280702;
        49.7640118	84.84210526;
        49.61651917	86.52631579;
        50.64896755	85.12280702;
        50.64896755	84.84210526;
        50.28023599	87.36842105;
        50.72271386	87.0877193;
        50.72271386	90.45614035;
        51.46017699	89.61403509;
        51.75516224	91.01754386;
        53.52507375	83.15789474;
        53.52507375	78.66666667;
        52.64011799	89.05263158;
        53.2300885	88.49122807;
        53.59882006	92.42105263;
        53.89380531	92.14035088;
        54.33628319	94.38596491;
        54.11504425	93.8245614;
        53.52507375	94.66666667;
        53.59882006	96.35087719;
        53.820059	96.63157895;
        54.63126844	99.71929825;
        55.73746313	96.07017544;
        56.10619469	96.07017544;
        56.47492625	99.43859649;
        56.7699115	99.71929825;
        57.28613569	98.03508772;
        57.50737463	99.71929825;
        57.06489676	99.71929825;
        57.80235988	99.15789474;
        58.90855457	98.87719298;
        58.53982301	96.07017544;
        57.80235988	91.01754386;
        58.39233038	90.73684211;
        59.35103245	98.03508772;
        60.53097345	99.71929825;
        59.6460177	95.78947368;
        59.79351032	96.63157895;
        59.94100295	95.50877193;
        60.60471976	93.26315789;
        61.34218289	94.66666667;
        62.37463127	96.35087719;
        61.34218289	91.85964912;
        62.22713864	89.33333333;
        61.4159292	87.64912281;
        61.26843658	84.28070175;
        59.35103245	91.01754386;
        63.7020649	89.61403509;
        64.51327434	87.0877193;
        63.77581121	86.80701754;
        63.7020649	85.68421053;
        63.62831858	85.12280702;
        63.18584071	86.24561404;
        61.4159292	79.50877193;
        61.4159292	76.98245614;
        62.59587021	79.78947368;
        63.40707965	80.63157895;
        63.48082596	79.50877193;
        63.84955752	80.07017544;
        64.51327434	81.75438596;
        63.92330383	76.14035088;
        65.10324484	76.42105263;
        65.54572271	72.77192982;
        66.43067847	75.57894737;
        66.13569322	71.92982456;
        65.76696165	68.28070175;
        65.76696165	66.31578947;
        66.87315634	66.31578947;
        65.39823009	64.07017544;
        67.16814159	63.22807018;
        67.75811209	62.66666667;
        68.42182891	59.57894737;
        63.40707965	59.29824561;
        63.40707965	52.84210526;
        64.80825959	53.68421053;
        64.80825959	52.28070175;
        65.76696165	48.07017544;
        67.53687316	51.71929825;
        70.56047198	48.63157895;
        67.02064897	42.73684211;
        69.38053097	41.61403509;
        69.38053097	42.45614035;
        67.46312684	36;
        71.37168142	34.59649123;
        73.43657817	34.59649123;
        68.56932153	27.57894737;
        70.19174041	29.54385965;
        70.48672566	29.8245614;
        72.40412979	24.77192982;
        73.06784661	25.61403509;
        73.36283186	18.59649123;
        73.43657817	17.75438596;
        75.20648968	17.75438596;
        73.36283186	12.98245614;
        74.39528024	12.98245614;
        75.42772861	12.70175439;
        76.46017699	8.771929825];

% Normalization
[val, idx] = max(data(:,2));
x_scale = data(idx,1);
data(:,1) = data(:,1)/x_scale;
data(:,2) = data(:,2)/val;

% Regression with "fit" function with "gauss2" option as model type
force_length_regression = fit(data(:, 1), data(:, 2), 'gauss2');
% plot(force_length_regression, data(:,1), data(:,2));

end
